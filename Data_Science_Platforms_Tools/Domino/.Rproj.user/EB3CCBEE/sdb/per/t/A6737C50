{
    "contents" : "## =============================================================================\n## R + H2O + Domino Stater Code\n## =============================================================================\n\n## Data Source: https://www.kaggle.com/c/afsis-soil-properties\n\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n## Install Domino Bleeding Edge Version on Domino\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n## Specify H2O version here\nh2o_ver <- \"1511\"\n\n## Install H2O\nlocal({r <- getOption(\"repos\"); r[\"CRAN\"] <- \"http://cran.us.r-project.org\"; options(repos = r)})\ntxt_repo <- (c(paste0(paste0(\"http://s3.amazonaws.com/h2o-release/h2o/master/\",\n                             h2o_ver),\"/R\"),\n               getOption(\"repos\")))\ninstall.packages(\"h2o\", repos = txt_repo, quiet = TRUE)\n\n\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n## Initiate and Connect to a Local H2O Cluster on Domino\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nlibrary(h2o)\nlocalH2O <- h2o.init(max_mem_size = '1g') ## using a max 1GB of RAM\n\n\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n## Import Data\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n## Get the local path on Domino\npath_cloud <- getwd()\n\n## Define other paths\npath_train <- paste0(path_cloud, \"/data/train.zip\")\npath_test <- paste0(path_cloud, \"/data/test.zip\")\npath_submission <- paste0(path_cloud, \"/data/sample_submission.csv\")\npath_output <- paste0(path_cloud, \"/results/my_Kaggle_submission.csv\")\n\n## Import Data to H2O Cluster\ntrain_hex <- h2o.importFile(localH2O, path = path_train)\ntest_hex <- h2o.importFile(localH2O, path = path_test)\nraw_sub <- read.csv(path_submission)\n\n\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n## Train a Deep Neural Networks model for each variable\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n## Split the dataset into 80:20 for training and validation\ntrain_hex_split <- h2o.splitFrame(train_hex, ratios = 0.8)\n#train_hex_split <- h2o.splitFrame(train_hex, ratios = 0.8, shuffle = TRUE)\n\n## One Variable at at Time\nls_label <- c(\"Ca\", \"P\", \"pH\", \"SOC\", \"Sand\")\n\nfor (n_label in 1:1) {\n\n  ## Display\n  cat(\"\\n\\nNow training a DNN model for\", ls_label[n_label], \"...\\n\")\n\n  ## Train a DNN\n  model <- h2o.deeplearning(x = 2:3595,\n                            y = (3595 + n_label),\n                            training_frame = train_hex_split[[1]],\n                            validation_frame = train_hex_split[[2]],\n                            activation = \"Rectifier\",\n                            hidden = c(50, 50, 50),\n                            epochs = 100,\n                            classification_stop = -1,\n                            balance_classes = FALSE,\n                            variable_importances = TRUE)\n\n  ## Print the Model Summary\n  print(model)\n  \n  print(h2o.varimp(model)) \n  \n  #print(model@model$varimp)\n\n  ## Use the model for prediction and store the results in submission template\n  raw_sub[, (n_label + 1)] <- as.matrix(h2o.predict(model, test_hex))\n\n}\n\n\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n## Save the results as a CSV\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nwrite.csv(raw_sub, file = path_output, row.names = FALSE)\n\n\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n## Print System and Session Info\n## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nprint(sessionInfo())\n\nprint(Sys.info())\n",
    "created" : 1435606019774.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2089470518",
    "id" : "A6737C50",
    "lastKnownWriteTime" : 1435683534,
    "path" : "C:/quick-start/Kaggle_AfSIS_with_H2O.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}