data_cleaned<-data_2012_weekend_delta
summary(data_cleaned)
data_cleaned <- na.omit(data_cleaned)
summary(data_cleaned)
models <- dlply(data, "Weeknum_4week", function(data_cleaned) {
lm(dlt_Sat_Sun ~ dlt_Fri_Sat, data = data_cleaned, na.omit)} )
library(plyr)
models <- dlply(data, "Weeknum_4week", function(data_cleaned) {
lm(data_cleaned$dlt_Sat_Sun ~ data_cleaned$dlt_Fri_Sat, data = data_cleaned)} )
data_cleaned$dlt_Sat_Sun
library(plyr)
models <- dlply(data, "Weeknum_4week", function(data_cleaned) {
lm(data_cleaned$dlt_Sat_Sun ~ data_cleaned$dlt_Fri_Sat, data = data_cleaned,na.omit)} )
data_cleaned$dlt_Fri_Sat
models <- dlply(data_cleaned, "Weeknum_4week", function(data_cleaned) {
lm(data_cleaned$dlt_Sat_Sun ~ data_cleaned$dlt_Fri_Sat, data = data_cleaned,na.omit)} )
models <- dlply(data_cleaned, "Weeknum_4week", function(data_cleaned) {
lm(data_cleaned$dlt_Sat_Sun ~ data_cleaned$dlt_Fri_Sat, data = data_cleaned)} )
anovas <- llply(models, anova)
models
anovas
str(data)
data$Weeknum_4week<-factor(data$Weeknum_4week)
xyplot(dlt_Sat_Sun ~ dlt_Fri_Sat | Weeknum_4week, data, pch= 2,as.table=TRUE,strip=strip.custom(strip.names=1),
type = c("p", "r"), col.line = "darkorange", lwd = 4)
str(data)
data$Weeknum_4week<-factor(data$Weeknum_4week)
xyplot(data_cleaned$dlt_Sat_Sun ~ data_cleaned$dlt_Fri_Sat | Weeknum_4week, data, pch= 2,as.table=TRUE,strip=strip.custom(strip.names=1),
type = c("p", "r"), col.line = "darkorange", lwd = 4)
filters = "and a.Year = 2014 and a.dayofweek= 7"
Final_query<-paste(Query,filters,sep="")
data_2012_weekend_delta <- sqldf(gsub("\n", "", Final_query))
data_cleaned<-data_2012_weekend_delta
summary(data_cleaned)
data_cleaned <- na.omit(data_cleaned)
summary(data_cleaned)
library(plyr)
models <- dlply(data_cleaned, "Weeknum_4week", function(data_cleaned) {
lm(data_cleaned$dlt_Sat_Sun ~ data_cleaned$dlt_Fri_Sat, data = data_cleaned)} )
anovas <- llply(models, anova)
models
anovas
str(data)
data$Weeknum_4week<-factor(data$Weeknum_4week)
xyplot(data_cleaned$dlt_Sat_Sun ~ data_cleaned$dlt_Fri_Sat | Weeknum_4week, data, pch= 2,as.table=TRUE,strip=strip.custom(strip.names=1),
type = c("p", "r"), col.line = "darkorange", lwd = 4)
data
str(data)
fit<-aov(data$unitsP ~ data$Weeknum_4week,data = data)
summary(fit)
Final_query<-paste(Query,filters,sep="")
data_2012_weekend_delta <- sqldf(gsub("\n", "", Final_query))
str(data_2012_weekend_delta)
Final_query<-paste(Query,filters,sep="")
data_2012_weekend_delta <- sqldf(gsub("\n", "", Final_query))
str(data_2012_weekend_delta)
Final_query
filters = "and a.Year = 2012 and a.dayofweek= 7"
Final_query<-paste(Query,filters,sep="")
Final_query
data_2012_weekend_delta <- sqldf(gsub("\n", "", Final_query))
str(data_2012_weekend_delta)
data_cleaned<-data_2012_weekend_delta
summary(data_cleaned)
data_cleaned <- na.omit(data_cleaned)
fit<-aov(data_cleaned$unitsP ~ data_cleaned$Weeknum_4week,data = data_cleaned)
summary(data_cleaned)
fit<-aov(data_cleaned$units_Sun ~ data_cleaned$Weeknum_4week,data = data_cleaned)
summary(fit)
fit<-aov(data_cleaned$units_Sat ~ data_cleaned$Weeknum_4week,data = data_cleaned)
summary(fit)
fit<-aov(data_cleaned$units_Fri ~ data_cleaned$Weeknum_4week,data = data_cleaned)
summary(fit)
Final_query<-paste(Query,filters,sep="")
Final_query
Final_query<-paste(Query,filters,sep="")
Final_query
filters = "and a.Year = 2012"
Final_query<-paste(Query,filters,sep="")
Final_query
data_2012_weekend_delta <- sqldf(gsub("\n", "", Final_query))
str(data_2012_weekend_delta)
fit<-aov(data_cleaned$units_Fri ~ data_cleaned$Weeknum_4week + data_cleaned$dayofweek ,data = data_cleaned)
summary(fit)
fit
plot(fit) # diagnostic plots
data_cleaned<-data_2012_weekend_delta
summary(data_cleaned)
data_cleaned$dayofweek<-factor(data_cleaned$dayofweek)
data_cleaned <- na.omit(data_cleaned)
summary(data_cleaned)
fit<-aov(data_cleaned$units_Fri ~ data_cleaned$Weeknum_4week + data_cleaned$dayofweek ,data = data_cleaned)
summary(fit)
plot(fit) # diagnostic plots
fit<-aov(data_cleaned$units_Fri ~ data_cleaned$dayofweek + data_cleaned$Weeknum_4week ,data = data_cleaned)
summary(fit)
data<-read.csv("C:/Users/dwoo57/Google Drive/Career/Data Mining Competitions/Kaggle/Walmart - Inventory and weather prediction/Experiments/Beta/Data_Collection/Store_31_item_9_2012_2014.csv")
data$orig_date<-as.Date(data$orig_date,"%m/%d/%Y")
str(data)
summary(data)
final_query<-paste(features_list,tables,joins,filters,sep="")
features_list = "SELECT a.orig_date,a.dayofweek,a.Weeknum_4week,
a.unitsP as units_Sun,b.unitsP as units_Sat,c.unitsP as units_Fri,
c.unitsP - b.unitsP as dlt_Fri_Sat, b.unitsP - a.unitsP as dlt_Sat_Sun"
tables = "FROM data a , data b, data c"
joins = "where a.dayofweek = b.dayofweek + 1
and a.dayofweek = c.dayofweek + 2
and a.Year = b.Year
and a.Weeknum = b.Weeknum
and a.Year = c.Year
and a.Weeknum = c.Weeknum"
filters = "and a.Year = 2012 and a.dayofweek= 7"
final_query<-paste(features_list,tables,joins,filters,sep="")
final_query
data_2012_weekend_delta <- sqldf(gsub("\n", "", Final_query))
str(data)
features_list = "SELECT a.orig_date,a.dayofweek,a.Weeknum_4week,
a.units, b.units as units_pr_week"
tables = "FROM data a , data b"
joins = "where a.dayofweek = b.dayofweek
and a.Year = b.Year
and a.Weeknum = b.Weeknum + 1"
filters = "and a.Year = 2012 and a.dayofweek= 7"
final_query<-paste(features_list,tables,joins,filters,sep="")
gsub("\n", "", final_query)
features_list = "SELECT a.orig_date,a.dayofweek,a.Weeknum_4week,
a.units, b.units as units_pr_week"
tables = "FROM data a , data b"
joins = "where a.dayofweek = b.dayofweek
and a.Year = b.Year
and a.Weeknum = b.Weeknum + 1"
filters = "and a.Year = 2012 and a.dayofweek= 7"
data_2012_weekend_delta <- sqldf(gsub("\n", "", final_query))
final_query
gsub("\n", "", final_query)
features_list = "SELECT a.orig_date,a.dayofweek,a.Weeknum_4week,
a.units, b.units as units_pr_week"
tables = " FROM data a , data b"
joins = " where a.dayofweek = b.dayofweek
and a.Year = b.Year
and a.Weeknum = b.Weeknum + 1"
filters = " and a.Year = 2012 and a.dayofweek= 7"
final_query<-paste(features_list,tables,joins,filters,sep=" ")
gsub("\n", "", final_query)
data_2012_weekend_delta <- sqldf(gsub("\n", "", final_query))
data_cleaned <- sqldf(gsub("\n", "", final_query))
library(plyr)
str(data_cleaned)
library(plyr)
models <- dlply(data_cleaned, "dayofweek", function(data_cleaned) {
lm(units ~ units_pr_week, data = data_cleaned)} )
anovas <- llply(models, anova)
models
anovas
IV_list<-c("units_pr_week")
IV_list
IV_list<-c("units_pr_week",0.1532,0.1989)
IV_list
IV_list[0]
IV_list[1]
IV_list[2]
IV_list<-c(["units_pr_week",0.1532,0.1989])
results =c("units_pr_week",0.1532,0.1989)
results
IV_list = list(results)
IV_list
IV_list[0]
IV_list[1]
results2 =c("units_pr_week",0.1532,0.1989)
IV_list[2]<-results2
IV_list
IV_list[3]<-results2
results2
IV_list
results =c("units_pr_week","prior",0.1532,0.1989)
results2 =c("units_pr_week","prior",0.1532,0.1989)
IV_list = data.frame(results, results2)       # df is a data frame
IV_list
IV_list = list(results)       # df is a data frame
IV_list
IV_list[2] = results2
IV_list[2
]
IV_list
IV_list[3] = c(results2)
IV_list
IV_list[length(IV_list)+1] <-list(results2)
IV_list
results =c("units_pr_week","prior",0.1532,0.1989)
results2 =c("units_pr_week","prior",0.1532,0.1989)
IV_list = list(results)
IV_list
IV_list[length(IV_list)+1] <-list(results2)
IV_list[length(IV_list)+1] <-list(results2)
IV_list
features_list = "SELECT a.orig_date,a.dayofweek,a.Weeknum_4week,
c.unitsP - b.unitsP as dlt_Fri_Sat, b.unitsP - a.unitsP as units_predict"
tables = " FROM data a , data b, data c"
joins = " where a.dayofweek = b.dayofweek + 1
and a.dayofweek = c.dayofweek + 2
and a.Year = b.Year
and a.Weeknum = b.Weeknum
and a.Year = c.Year
and a.Weeknum = c.Weeknum"
filters = " and a.Year = 2012 and a.dayofweek= 7"
final_query<-paste(features_list,tables,joins,filters,sep=" ")
data_cleaned <- sqldf(gsub("\n", "", final_query))
features_list = "SELECT a.orig_date,a.dayofweek,a.Weeknum_4week,
c.units - b.units as dlt_Fri_Sat, b.units - a.units as units_predict"
tables = " FROM data a , data b, data c"
joins = " where a.dayofweek = b.dayofweek + 1
and a.dayofweek = c.dayofweek + 2
and a.Year = b.Year
and a.Weeknum = b.Weeknum
and a.Year = c.Year
and a.Weeknum = c.Weeknum"
filters = " and a.Year = 2012 and a.dayofweek= 7"
final_query<-paste(features_list,tables,joins,filters,sep=" ")
data_cleaned <- sqldf(gsub("\n", "", final_query))
str(data_cleaned)
library(plyr)
models <- dlply(data_cleaned, "Weeknum_4week:", function(data_cleaned) {
lm(units_predict ~ dlt_Fri_Sat, data = data_cleaned)} )
str(data_cleaned)
models <- dlply(data_cleaned, "Weeknum_4week", function(data_cleaned) {
lm(units_predict ~ dlt_Fri_Sat, data = data_cleaned)} )
anovas <- llply(models, anova)
models
anovas
results =c("dlt_Fri_Sat","week0",0.001681,0.7592)
results2 =c("dlt_Fri_Sat","week1",0.02658,-0.8942)
results3 =c("dlt_Fri_Sat","week2",0.5541,-0.174)
results4 =c("dlt_Fri_Sat","week3",0.06733,-0.6888)
IV_list[length(IV_list)+1] <-list(results)
IV_list[length(IV_list)+1] <-list(results2)
IV_list[length(IV_list)+1] <-list(results3)
IV_list[length(IV_list)+1] <-list(results4)
IV_list
require(graphics)
acf(lh)
str(lh)
plot(lh)
acf(lh)
acf(lh, type = "covariance")
plot(lh)
plot(ldeaths)
acf(ldeaths)
plot(ldeaths)
acf(ldeaths, ci.type = "ma")
acf(ldeaths)
plot(data)
str(data)
ts<-data$units
ts<-ts(ts,frequency=365,start=c(2012,1,1))
plot(ts)
acf(ts)
ts<-na.omit(data$units)
ts<-ts(ts,frequency=365,start=c(2012,1,1))
plot(ts)
acf(ts)
fit <- auto.arima(ts)
library(forecast)
fit <- auto.arima(ts)
plot(forecast(fit,h=20))
summary(fit)
fit
fit$arma
plot(fit$residuals)
acf(fit$residuals)
fit$arma
fit_manual<-arima(ts,order = c(4, 3, 0),  seasonal = list(order = c(0, 365, 0), period = 365))
fit_manual<-arima(ts,order = c(4, 3, 0),  seasonal = list(order = c(0, 30, 0))
fit_manual<-arima(ts,order = c(4, 3, 0),  seasonal = list(order = c(0, 30, 0)))
fit_manual<-arima(ts,order = c(4, 3, 0),  seasonal = list(order = c(0, 30, 0)))
fit_manual<-arima(ts,order = c(4, 3, 0),  seasonal = list(order = c(0, 30, 30)))
fit_manual<-arima(ts,order = c(4, 3, 0),  seasonal = list(order = c(0, 30, 30),period = 365))
fit_manual<-arima(ts,order = c(4, 3, 0),  seasonal = list(order = c(1, 30, 30),period = 365))
fit_manual<-arima(ts,order = c(4, 3, 0),  seasonal = list(order = c(0, 1, 1),period = 12))
fit_manual$arma
fit_manual<-arima(ts,order = c(1, 2, 3),  seasonal = list(order = c(4, 5, 6),period = 7))
fit_manual<-arima(ts,order = c(1, 2, 0),  seasonal = list(order = c(4, 5, 6),period = 7))
fit_manual<-arima(ts,order = c(1, 2, 0),  seasonal = list(order = c(0, 5, 6),period = 7))
fit_manual<-arima(ts,order = c(1, 2, 0),  seasonal = list(order = c(0, 1, 1),period = 7))
fit_manual$arma
fit_manual<-arima(ts,order = c(1, 2, 3),  seasonal = list(order = c(0, 1, 1),period = 7))
fit_manual$arma
fit_manual<-arima(ts,order = c(4, 2, 3),  seasonal = list(order = c(0, 1, 1),period = 7))
fit_manual$arma
fit_manual<-arima(ts,order = c(4, 2, 3),  seasonal = list(order = c(0, 1, 9),period = 7))
fit_manual$arma
fit$arma
plot(stl(ts, "periodic"))
ts_7<-ts(ts,frequency=7,start=c(2012,1,1))
plot(ts_7)
plot(stl(ts, "periodic"))
plot(stl(ts_7, "periodic"))
seasonal_fit<-stl(ts_7, "periodic")
seasonal_fit
str(seasonal_fit$time.series)
seasonal_fit$time.series[1]
seasonal_fit$time.series[2]
seasonal_fit$time.series[1:7]
plot(seasonal_fit$time.series[1:7])
plot(seasonal_fit$time.series[1:7],line='l')
plot(seasonal_fit$time.series[1:7],type='l')
plot(seasonal_fit$time.series[1:14],type='l')
plot(seasonal_fit$time.series[0:14],type='l')
plot(seasonal_fit$time.series[0:21],type='l')
ts_7$time.series[,1]
seasonal   <- ts_7$time.series[,1]
ts_7$time.series[,1]
ts_7
seasonal_fit$time.series[,1]
seasonal   <- seasonal_fit$time.series[,1]
trend     <- seasonal_fit$time.series[,2]
remainder  <- seasonal_fit$time.series[,3]
ts_7_season_Adjust<-(trend+remainder)
plot(ts_7_season_Adjust)
acf(ts_7_season_Adjust)
acf(ts)
ts.plot(ts,ts_7_season_Adjust)
ts.plot(ts_7,ts_7_season_Adjust)
plot(ts_7,col="red")
par(new=TRUE)
plot(ts_7_season_Adjust,col="green")
plot(ts_7,col="red",xlim=c(0,14))
plot(ts_7,col="red")
plot(ts_7,col="red",xlim=c(0,2040))
plot(ts_7,col="red",xlim=c(2000,2040))
plot(ts_7,col="red",xlim=c(2010,2040))
par(new=TRUE)
plot(ts_7_season_Adjust,col="green",xlim=c(2010,2040))
plot(ts_7,col="red",xlim=c(2010,2020))
plot(ts_7_season_Adjust,col="green",xlim=c(2010,2020))
par(new=TRUE)
plot(ts_7_season_Adjust,col="green",xlim=c(2010,2020))
plot(ts_7,col="red",xlim=c(2010,2020))
par(new=TRUE)
plot(ts_7_season_Adjust,col="green",xlim=c(2010,2020))
plot(seasonal_fit$time.series[0:21],type='l')
plot(stl(ts_7, "periodic"))
head(trend)
head(remainder)
head(seasonal)
seasonal_fit
ts<-ts(ts,frequency=365,start=c(2012,1,1))
plot(ts)
head(ts)
str(data)
ds_months456<-(data,Month >= 4 & Month <=6)
ds_months456<-subset(data,Month >= 4 & Month <=6)
str(ds_months456)
summary(ds_months456)
ds_2012<-subset(ds_months456,Year = 2012)
ds_2013<-subset(ds_months456,Year = 2013)
ds_2014<-subset(ds_months456,Year = 2014)
plot(ds_2012$units)
plot(ds_2012$units, type = 'l')
summary(ds_2012)
ds_2012<-subset(ds_months456,Year == 2012)
ds_2013<-subset(ds_months456,Year == 2013)
ds_2014<-subset(ds_months456,Year == 2014)
plot(ds_2012$units, type = 'l')
plot(ds_2012$units, type = 'l',col='green')
par(new=TRUE)
#how to offset for day of week
plot(ds_2013$units, type = 'l',col='orange')
par(new=TRUE)
plot(ds_2014$units, type = 'l',col='red')
plot(ds_2012$units, type = 'l',col='green')
par(new=TRUE)
#how to offset for day of week
plot(ds_2013$units, type = 'l',col='blue')
par(new=TRUE)
plot(ds_2014$units, type = 'l',col='black')
plot(ds_2012$units, type = 'l',col='green',lwd=2)
plot(ds_2012$units, type = 'l',col='green',lwd=2)
par(new=TRUE)
#how to offset for day of week
plot(ds_2013$units, type = 'l',col='blue',lwd=2)
par(new=TRUE)
plot(ds_2014$units, type = 'l',col='black',lwd=2)
plot(ds_2014$units, type = 'l',col='black',lwd=2)
plot(ds_2013$units, type = 'l',col='blue',lwd=2)
plot(ds_2014$units, type = 'l',col='black',lwd=2)
plot(ds_2013$units, type = 'l',col='blue',lwd=2)
par(new=TRUE)
plot(ds_2014$units, type = 'l',col='black',lwd=2)
plot(ds_2013$units, type = 'l',col='blue',lwd=2)
str(ds_2012)
str(ds_2012)
ds_2012_sun<-subset(ds_2012,dayofweek == 7)
ds_2013_sun<-subset(ds_2013,dayofweek == 7)
ds_2014_sun<-subset(ds_2014,dayofweek == 7)
str(ds_2012_sun)
summary(ds_2012_sun)
str(data)
data$Month<-factor(data$Month)
data$orig_date<-as.Date(data$orig_date,"%m/%d/%Y")
data$Month<-factor(data$Month)
data$Weeknum_4week<-factor(data$Weeknum_4week)
data$dayofweek<-factor(data$dayofweek)
str(data)
ds_months456<-subset(data,Month >= 4 & Month <=6)
ds_months456<-subset(data,Month=c(4,5,6))
str(ds_months456)
summary(ds_months456)
month_filter = c(4,5,6)
ds_months456<-subset(data,Month %in% month_filter)
summary(ds_months456)
ds_2012<-subset(ds_months456,Year == 2012)
ds_2013<-subset(ds_months456,Year == 2013)
ds_2014<-subset(ds_months456,Year == 2014)
plot(ds_2012$units, type = 'l',col='green',lwd=2)
par(new=TRUE)
#how to offset for day of week
plot(ds_2013$units, type = 'l',col='blue',lwd=2)
par(new=TRUE)
plot(ds_2014$units, type = 'l',col='black',lwd=2)
ds_2012_sun<-subset(ds_2012,dayofweek == 7)
ds_2013_sun<-subset(ds_2013,dayofweek == 7)
ds_2014_sun<-subset(ds_2014,dayofweek == 7)
summary(ds_2012_sun)
ds_2012_sun
fit<-aov(units ~ Weeknum_4week,data = ds_2012_sun)
summary(fit)
plot(fit) # diagnostic plots
summary(ds_2012_sun)
fit<-aov(units ~ Weeknum_4week,data = ds_2013_sun)
summary(fit)
fit<-aov(units ~ Weeknum_4week,data = ds_2014_sun)
summary(fit)
fit<-aov(units ~ Weeknum_4week,data = ds_2012_sun)
summary(fit)
plot(ds_2012_sun$units)
plot(ds_2012_sun$units,type='l')
library(ggplot2)
install.packages("ggplot2")
ggplot(ds_2012_sun, aes(factor(Weeknum_4week), units) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(ds_2012_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
library(ggplot2)
ggplot(ds_2012_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(ds_2013_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(ds_2014_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(ds_2012_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(ds_2012_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
+ stat_summary(fun.y="mean", geom="bar")
ggplot(ds_2012_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
+ stat_summary(fun.y="mean")
ggplot(ddply(ds_2012_sun, .(Weeknum_4week), mean), aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(ds_2014_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(ds_2013_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(ds_2012_sun, aes(factor(Weeknum_4week), units)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
boxplot(units~Weeknum_4week,data=ds_2012_sun, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(units~Weeknum_4week,data=ds_2013_sun, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(units~Weeknum_4week,data=ds_2014_sun, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(units~Weeknum_4week,data=ds_2012_sun, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
data<-read.csv("C:/Users/dwoo57/Google Drive/Career/Data Mining Competitions/Kaggle/Walmart - Inventory and weather prediction/Experiments/Gamma/Train/Explanatory_Analysis/Data_Collection/train_dept92_yoy_sales_unemployment.csv")
data<-read.csv("C:/Users/dwoo57/Google Drive/Career/Data Mining Competitions/Kaggle/Walmart - Inventory and weather prediction/Experiments/Gamma/Train/Explanatory_Analysis/train_dept92_yoy_sales_unemployment.csv")
str(data)
data<-read.csv("C:/Users/dwoo57/Google Drive/Career/Data Mining Competitions/Kaggle/Walmart - Inventory and weather prediction/Experiments/Gamma/Train/Explanatory_Analysis/train_dept92_yoy_sales_unemployment.csv")
str(data)
data<-read.csv("C:/Users/dwoo57/Google Drive/Career/Data Mining Competitions/Kaggle/Walmart - Inventory and weather prediction/Experiments/Gamma/Train/Explanatory_Analysis/train_dept92_yoy_sales_unemployment.csv")
str(data)
library(plyr)
models <- dlply(data, "Store_type", function(data_cleaned) {
lm(Weekly_Sales ~ Unemploy, data = data)} )
install.packages("plyr")
library(plyr)
models <- dlply(data, "Store_type", function(data_cleaned) {
lm(Weekly_Sales ~ Unemploy, data = data)} )
anovas <- llply(models, anova)
models
anovas
library(plyr)
models <- dlply(data, "Store_type", function(data) {
lm(Weekly_Sales ~ Unemploy, data = data)} )
anovas <- llply(models, anova)
models
anovas
fit<-lm(Weekly_Sales ~ Unemploy, data = data)
summary(fit)
plot(Weekly_Sales ~ Unemploy, data = data)
plot(fit)
