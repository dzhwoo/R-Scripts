{
    "contents" : "# David - represents the task\n# Pepper - represents the actions\n\n# David: Ok Pepper here is some data\ndata<-read.csv(\"C:/Users/dwoo57/Google Drive/Career/Data Mining Competitions/Kaggle/Walmart - Inventory and weather prediction/Experiments/Beta/Data_Collection/Store_31_item_9_2012_2014.csv\")\n\n# David: Ok Pepper, what do you see?\nstr(data)\n\n# David: Make the orig_date as date <<< This could make it into JSON\ndata$orig_date<-as.Date(data$orig_date,\"%m/%d/%Y\")\ndata$Month<-factor(data$Month)\ndata$Weeknum_4week<-factor(data$Weeknum_4week)\ndata$dayofweek<-factor(data$dayofweek)\n\nstr(data)\nsummary(data)\n\ncolnames(data)[4]<-\"unitsP\"\n\nstr(data)\n\n\"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\"\n\"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<MAIN QUESTIONS/HYPOTHESIS TO TEST>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\"\n\"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\"\n\n#Pepper: Got it...hmm let me check my corpus to see what I should test for....\n\"Corpus:\nSeasonality: Monthly, Weekly,Daily\nTrend: Year over year\nHolidays:\nAutocorrelation\n  - between recent days\n  - between recent week\n  - Seasonality between days?\n  - Seasonality between weeks?\"\n  \n#Pepper: This is what my corpus says\n\n#David: Pepper this is cool and love the charts...oh ya what are our hypothesis?\n\n\"Pepper: Ah good point. Here they are\n1) Pay week (Complete!)\n  3) If i shop on Sat i prob wont shop on Sun\n  4) If I shop on Fri, i prob wont shop on Sat\n2) Non pay week (Complete!)\n  3) If i shop on Sat i prob wont shop on Sun\n  4) If I shop on Fri, i prob wont shop on Sat\n5) Mid week top up\n6) Prior week shopping compared to this week\"\n\n# Some things want to test here is the dependancy across previous days\n# Say Sunday what is that dependepent on\n# Can we isolate days, can we say autocorrelation of diff days seperately.....\n\n# Below is the exploration or the analysis\n\n# With each interation we can generalize\n\n# Autocorrelation example\n\nrequire(graphics)\n\n## Examples from Venables & Ripley\nacf(lh)\nacf(lh, type = \"covariance\")\npacf(lh)\n\n# For seasonality,  Probably a good example would be this\n# Below is monthly seasonality. Notice when the oscillations go back up again, seasonality is 12 months at a time.\n# i.e when previous decemember goes up, this decemember goes up\nplot(ldeaths)\nacf(ldeaths)\n\n# So ACF, can be \n\nplot(data)\n\n# first transform into time series\nts<-na.omit(data$units)\nts<-ts(ts,frequency=365,start=c(2012,1,1))\nplot(ts)\n\nacf(ts)\n\n# so definetely weekly seasonality for sure...as in day of week\n\n# next how to adjust for it. Or is there a way to detect it?\n\n# Maybe build first and then later go back to see\n\n# Ok now detected seasonality, how to remove\n\n# seem to use arima, how does this work?\n\n#use auto arima to help us detect\nlibrary(forecast)\nfit <- auto.arima(ts)\nplot(forecast(fit,h=20))\nsummary(fit)\n\n# how to intepret auto.arima results\n\n# Maybe start with the objective we want to have model that the residuals do not have any correlation\n\n# so next let's plot residuals\n\n# I'm guessing this should decrease after time - residuals should be stationary and non-seasonal?\nacf(fit$residuals)\n\n# next how to interpret model\n\n# what does (4,0,3) mean?\n\n# what does non-zero mean? \n\n# http://stats.stackexchange.com/questions/44992/what-are-the-values-p-d-q-in-arima\n\n# 4 mean - autoregressive 4-order autogressive\n# 12 means - 12th order moving average\n# 0 is the difference between the autogressive model and moving average model\n\n# how to check the seasonal component of ARIMA?\nfit$arma\n\nfit_manual<-arima(ts,order = c(4, 2, 3),  seasonal = list(order = c(0, 1, 9),period = 7))\nfit_manual$arma\n\n\"Interpretation of ARIMA model, when doing model$ARMA:\nNon-S(1):\n4 - Non-S(1)           \n3 - Non-S(3)\n0 - S(1)\n1 - S(3)\n7 - S_Period\n2 -Non-S(2) \n1 -S (2)\n\"\n\n# hmm so auto-arima not picking up any season parts\n\n# can we use acf to detect seasonality, then remove using stl\n\nts_7<-ts(ts,frequency=7,start=c(2012,1,1))\nplot(ts_7)\n\nplot(stl(ts_7, \"periodic\"))\nseasonal_fit<-stl(ts_7, \"periodic\")\nstr(seasonal_fit$time.series)\nplot(seasonal_fit$time.series[0:21],type='l')\n\nseasonal   <- seasonal_fit$time.series[,1]\ntrend     <- seasonal_fit$time.series[,2]\nremainder  <- seasonal_fit$time.series[,3]\n\nts_7_season_Adjust<-(trend+remainder)\n\n# how to add previous plot, also how do we check that it works. What is our expectation?\nacf(ts_7_season_Adjust)\nacf(ts)\n\nplot(ts_7,col=\"red\",xlim=c(2010,2020))\npar(new=TRUE)\nplot(ts_7_season_Adjust,col=\"green\",xlim=c(2010,2020))\n\n# it looks like some adjustments are made but very little. Is seas\n\nhead(trend)\nhead(remainder)\nhead(seasonal)\n\nseasonal_fit\n\n# is seasonality so small?\n\n\n\"Ok based on the tools that we have can we build a simple model to predict Sunday\n\nStart with the simplest.\nCan we predict 2014 summer based on 2012 and 2013 data\n\"\nts<-ts(ts,frequency=365,start=c(2012,1,1))\nplot(ts)\nhead(ts)\n\n#Can we filter based on the months, say April,May,June\nstr(data)\n\nmonth_filter = c(4,5,6)\n\nds_months456<-subset(data,Month %in% month_filter)\nstr(ds_months456)\nsummary(ds_months456)\n\nds_2012<-subset(ds_months456,Year == 2012)\nds_2013<-subset(ds_months456,Year == 2013)\nds_2014<-subset(ds_months456,Year == 2014)\n\nplot(ds_2012$units, type = 'l',col='green',lwd=2)\npar(new=TRUE)\n#how to offset for day of week\nplot(ds_2013$units, type = 'l',col='blue',lwd=2)\npar(new=TRUE)\nplot(ds_2014$units, type = 'l',col='black',lwd=2)\n\n#abit hard to tell, why I think it's the thickness of the line. FIXED. Adjust thickness easier to see visually.\n#Also are they y-axis to scale? Or each of them someway adjusted?\n#Assume all are using the same scale\n# I doubt they use the same scale, since it means we do not redraw the scale. That means they are similar but depend\n# on some mean value\n\n#TODO: Plot lines on the same graph using the same axis. Gain = Low, more for visualization\n\n# So we want to predict two sundays in 2014, using 2013 and 2012 and say we have some history in 2014 as well\n\n# We train on 2012 and 2013\n\n# test on 2014\n\n\" For 2012/2013:\nAssume:\n1. Seasonality: day of week and pay weeks are a big thing\n\nCan we use anova to help us determine what is significant?\n\nShould we predict sunday or should we predict a week?\n\nProbably Sunday is easier later predicting a week.\n\nSunday = payperiod/nonpayperiod impact + priorweekend purchase on Fri/Sat + Midweek purchase\n\nWe are basically blocking for:\nSeasonality - since same season April,May,June\nTrends - I think if we are using 2014 data as input we should be able to block for this as well\n\n\"\n\n# 2012: Run ANOVA - weeknum_4week for Sunday is this signficiant?\n# 2013: Run same thing on 2013 - weeknum_4week for Sunday is this signficiant?\n\n\nstr(ds_2012)\n\nstr(ds_2012)\n\n#subset the data for sunday\nds_2012_sun<-subset(ds_2012,dayofweek == 7)\nds_2013_sun<-subset(ds_2013,dayofweek == 7)\nds_2014_sun<-subset(ds_2014,dayofweek == 7)\n\nsummary(ds_2012_sun)\n\n\nfit<-aov(units ~ Weeknum_4week,data = ds_2012_sun)\nfit<-aov(units ~ Weeknum_4week,data = ds_2013_sun)\nfit<-aov(units ~ Weeknum_4week,data = ds_2014_sun)\n\n# does not seem signficant but is the same size too small?\n# odd that 2012 not \nsummary(fit)\nplot(fit) # diagnostic plots\n\nplot(ds_2012_sun$units,type='l')\n# how to do a quick group by in R, see the avg mean?\n\nlibrary(ggplot2)\n\n#How to do an avg?\n\n# TODO: Plot Avg. Gain = 10%\n\nggplot(ddply(ds_2012_sun, .(Weeknum_4week), mean), aes(factor(Weeknum_4week), units)) + \n  geom_bar(stat=\"identity\", position = \"dodge\") + \n  scale_fill_brewer(palette = \"Set1\")\n\n#Maybe one is higher than the other...the rest may be the same\n#Does anova? I think at least 1 has to been different right?\n\nggplot(ds_2012_sun, aes(factor(Weeknum_4week), units)) + \n  geom_bar(stat=\"identity\", position = \"dodge\") + \n  scale_fill_brewer(palette = \"Set1\")\n\nggplot(ds_2013_sun, aes(factor(Weeknum_4week), units)) + \n  geom_bar(stat=\"identity\", position = \"dodge\") + \n  scale_fill_brewer(palette = \"Set1\")\n\nggplot(ds_2014_sun, aes(factor(Weeknum_4week), units)) + \n  geom_bar(stat=\"identity\", position = \"dodge\") + \n  scale_fill_brewer(palette = \"Set1\")\n\n#Also should do a box plot here to look at the means\n\n#boxplot gives some intuition behind the #s. Could be due to variance\n\nboxplot(units~Weeknum_4week,data=ds_2012_sun, main=\"Car Milage Data\", \n        xlab=\"Number of Cylinders\", ylab=\"Miles Per Gallon\")\n\nboxplot(units~Weeknum_4week,data=ds_2013_sun, main=\"Car Milage Data\", \n        xlab=\"Number of Cylinders\", ylab=\"Miles Per Gallon\")\n\nboxplot(units~Weeknum_4week,data=ds_2014_sun, main=\"Car Milage Data\", \n        xlab=\"Number of Cylinders\", ylab=\"Miles Per Gallon\")\n\n\"WISH LIST\na) from date, form years, months, payperiod\"\n\n",
    "created" : 1434470000096.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4035867021",
    "id" : "65323B38",
    "lastKnownWriteTime" : 1434735393,
    "path" : "C:/Users/dwoo57/Google Drive/Knowledge Base/R Scripts/Data_Science_ModUnits/OliviaIO_Curiosity_Module_Temporal_Analysis_Test_v4_building_simple_model_using_first_wlmrt_Data.R",
    "project_path" : "OliviaIO_Curiosity_Module_Temporal_Analysis_Test_v4_building_simple_model_using_first_wlmrt_Data.R",
    "properties" : {
        "notebook_author" : "dwoo57",
        "notebook_title" : "PepperIO_Curiosity_Feature_Exploration_V2.R",
        "notebook_type" : "default",
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}